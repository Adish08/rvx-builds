name: Build APKs
on:
  workflow_dispatch:
  schedule: [{cron: "0 0 * * 0"}]
  
jobs:
  run:
    permissions: write-all
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-java@v5
        with:
          distribution: "temurin"
          java-version: "21"

      - name: Checkout
        uses: actions/checkout@v5
        with:
          fetch-depth: 0
          submodules: true

      - name: Update config
        if: ${{ inputs.from_ci }}
        run: |
          if git checkout origin/update build.md; then
            UPDATE_CFG=$(./build.sh config.toml --config-update)
            if [ "$UPDATE_CFG" ]; then
              echo "$UPDATE_CFG" > config.json
            fi
          fi

      - name: Cache downloaded tools and intermediate build files
        uses: actions/cache@v4
        id: build_cache
        with:
          path: |
            temp
            bin/apksigner.jar
            bin/aapt2/aapt2-arm64
            bin/toml/tq-arm64
          key: ${{ runner.os }}-full-build-${{ hashFiles('config.toml') }}-${{ hashFiles('utils.sh') }}
          restore-keys: |
            ${{ runner.os }}-full-build-${{ hashFiles('config.toml') }}-
            ${{ runner.os }}-full-build-

      - name: Get next version code
        id: next_ver_code
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          TAG=$(gh release list -L 1 | awk -F '\t' '{print $3}')
          if [ -z "$TAG" ]; then TAG=0; fi
          echo "NEXT_VER_CODE=$((TAG + 1))" >> $GITHUB_OUTPUT

      - name: Build APKs
        continue-on-error: true
        run: |
          chmod +x build.sh
          chmod +x utils.sh
          ./build.sh config.toml
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_REPOSITORY: $GITHUB_REPOSITORY
          NEXT_VER_CODE: ${{ steps.next_ver_code.outputs.NEXT_VER_CODE }}

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: ./build/

      - name: Get output
        id: get_output
        run: |
          echo "DATE=$(date +%y.%m.%d)" >> "$GITHUB_OUTPUT"
          DELIM="$(openssl rand -hex 8)"
          echo "BUILD_LOG<<${DELIM}" >> "$GITHUB_OUTPUT"
          cat build.md >> "$GITHUB_OUTPUT"
          echo "${DELIM}" >> "$GITHUB_OUTPUT"
          cp -f build.md build.tmp

      - name: Upload build to release
        uses: svenstaro/upload-release-action@v2
        with:
          body: ${{ steps.get_output.outputs.BUILD_LOG }}
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ./build/*
          release_name: ${{ steps.get_output.outputs.DATE }}
          tag: ${{ steps.next_ver_code.outputs.NEXT_VER_CODE }}
          file_glob: true
          overwrite: true

      - name: Update changelog branch
        run: |
          git checkout -f update || git switch --discard-changes --orphan update
          cp -f build.tmp build.md

      - uses: stefanzweifel/git-auto-commit-action@v6
        with:
          branch: update
          file_pattern: build.md
          commit_message: Bump version ${{ steps.next_ver_code.outputs.NEXT_VER_CODE }}
